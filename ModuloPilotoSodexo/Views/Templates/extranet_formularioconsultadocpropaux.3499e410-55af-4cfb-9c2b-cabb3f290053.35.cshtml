@using Viatecla.Factory.Scriptor
@using System.Web
@using System.Text
@model ScriptorContent

  @{
  ScriptorContent mimodel= Model;
}

<script>
  
  	  @{
              	  List<string> lstNombreRecursos=new List<String>();
  				  List<string> lstUrl=new List<String>();
  				  List<string> lstElementos=new List<String>();
  				  StringBuilder soloLecturaCampos = new StringBuilder();
  
                  foreach (ScriptorContent content1 in mimodel.Parts.ContenedorIzquierda)
                  {
                   	foreach(ScriptorContent mcontent in content1.Parts.Controls)
                  	{
                      	if (((Viatecla.Factory.Scriptor.ScriptorContentParts)mcontent.Parts).Keys.ToList().Exists(x => x == "es_pe__NombreBoton") == true)
                        {


                            foreach (ScriptorContent campo in mcontent.Parts.Campos)
                            {
                                if (!String.IsNullOrEmpty((string)campo.Parts.Recurso.Value))
                                {
                                    string itemNombreRecurso = (string)campo.Parts.Recurso.Title.Replace(" ","");
                                    string itemValorRecurso = (string)campo.Parts.Recurso.Content.Parts.ValorRecurso.ToString();
                                  	
                                    if (!lstNombreRecursos.Exists(x => x == itemNombreRecurso))
                                    {
                                      lstNombreRecursos.Add(itemNombreRecurso.Replace(" ",""));
                                      lstUrl.Add(itemValorRecurso);
                                  	}
                                  	if (!String.IsNullOrEmpty(campo.Parts.ElementoRecurso.Content.Parts.FieldName))
                                 	{
                                      string itemElemento =itemValorRecurso+"-"+ (string)campo.Parts.ElementoRecurso.Content.Parts.DisplayMember.ToString()+"-"+campo.Parts.IdColumna+"-"+campo.Parts.TipoControl.Content.Parts.Codigo +"-"+ campo.Parts.ElementoRecurso.Content.Parts.ValueMember+"-"+campo.Parts.ElementoRecurso.Content.Parts.DataSource;
                                      if (!lstElementos.Exists(x => x == itemElemento))
                                      {
                                        lstElementos.Add(itemElemento);
                                        if(Convert.ToString(campo.Parts.SoloLectura)=="1")
                                        {
                                          soloLecturaCampos.Append("$('#"+campo.Parts.IdColumna+"').attr('readonly', '');");
                                          soloLecturaCampos.Append("$('#"+campo.Parts.IdColumna+"').css({\"color\" : \"gray\"});");
                                        }
                                      }
                                    }
                                    
                                }
                            }
                        }
                    }
                  }
                  foreach (ScriptorContent content1 in mimodel.Parts.ContenedorDerecha)
                  {
                   	foreach(ScriptorContent mcontent in content1.Parts.Controls)
                    {
                        if (((Viatecla.Factory.Scriptor.ScriptorContentParts)mcontent.Parts).Keys.ToList().Exists(x => x == "es_pe__NombreBoton") == true)
                        {
 						        
                                foreach(ScriptorContent campo in mcontent.Parts.Campos)
                                {
                                    if (!String.IsNullOrEmpty((string)campo.Parts.Recurso.Value))
                                    {
                                        string itemNombreRecurso = (string)campo.Parts.Recurso.Title.Replace(" ","");
                                        string itemValorRecurso = (string)campo.Parts.Recurso.Content.Parts.ValorRecurso.ToString();
                                        if (!lstNombreRecursos.Exists(x => x == itemNombreRecurso))
                                        {
                                            lstNombreRecursos.Add(itemNombreRecurso);
                                            lstUrl.Add(itemValorRecurso);
                                        }
                                        if (!String.IsNullOrEmpty(campo.Parts.ElementoRecurso.Content.Parts.FieldName))
                                        {
                                            string itemElemento =itemValorRecurso+"-"+ (string)campo.Parts.ElementoRecurso.Content.Parts.DisplayMember.ToString()+"-"+campo.Parts.IdColumna+"-"+campo.Parts.TipoControl.Content.Parts.Codigo +"-"+ campo.Parts.ElementoRecurso.Content.Parts.ValueMember+"-"+campo.Parts.ElementoRecurso.Content.Parts.DataSource+"-"+campo.Parts.ElementoRecurso.Content.Parts.FieldName;
                                            if (!lstElementos.Exists(x => x == itemElemento))
                                            {
                                                lstElementos.Add(itemElemento);
                                                if(Convert.ToString(campo.Parts.SoloLectura)=="1")
                                                {
                                                  soloLecturaCampos.Append("$('#"+campo.Parts.IdColumna+"').attr('readonly', '');");
                                                  soloLecturaCampos.Append("$('#"+campo.Parts.IdColumna+"').css({\"color\" : \"gray\"});");
                                              	}
                                      
                                            }
                                        }
									}
								}
                        }
                      }
                    
                  }
    }
                                  
  	//definicion de recursos;
  	@{
          StringBuilder variablesNombres = new StringBuilder();
    }
     
     
  	@foreach(var reg in lstNombreRecursos)
    {
  		variablesNombres.Append("var vm_"+reg+"=null;");
  	}
    @Html.Raw(variablesNombres.ToString())
  	
  	//carga de recursos
  	function CargarRecursosVM()
	{
      		 @for(int i=0;i<lstUrl.Count;i++)
             {
                @:$.ajax({
                 @:    url:'@(lstUrl[i])',
                  @:   type:"POST",
                  @:   headers: { __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val() },
                 @:    dataType:"json",
                 @:    success:function(data){
                @:          vm_@(lstNombreRecursos[i])=data;
               				foreach(var item in lstElementos.FindAll(x=>x.Contains(lstUrl[i])))
                            {
                              if(item.Split('-')[3]=="TC006")
                              {
                                 @:var paramsCombos_@(lstNombreRecursos[i])={ID:"@(item.Split('-')[4])",Datos:"@(item.Split('-')[1])"};
                                 @:RecargarSelect(vm_@(lstNombreRecursos[i]).@(item.Split('-')[5]), $("#@(item.Split('-')[2])"), vm_@(lstNombreRecursos[i]).@(item.Split('-')[6]), paramsCombos_@(lstNombreRecursos[i]));
                              }
                                else
                                {
                                @:$("#@(item.Split('-')[2])").val(vm_@(lstNombreRecursos[i]).@(item.Split('-')[6]));
                                }
               				}
                 @:    }
                 @:});
      		}
            @Html.Raw(soloLecturaCampos.ToString())
	
	}
  	
  </script>
      
                                  
                                  <!--                          
<div style="padding-top:0!important;padding-bottom:0!important;">
                                  
  <div style="height: 3px; border: 1px solid #0E75B5;">
  </div>
                                  -->

@{
    int icI=0;int icD=0;
    string seccionName="";
	string seccionNameAdiI="";
	string seccionNameAdiD="";
}

<div class="row2">
                                  
                                  
                                      
  @if (mimodel.Parts.ContenedorIzquierda.Count > 0 && mimodel.Parts.ContenedorDerecha.Count > 0)
  {
   

	<div class="celdabootstrap col-md-3 block">
  
      @foreach (ScriptorContent content in mimodel.Parts.ContenedorIzquierda)
      {
          icI=icI+1;
          seccionName="seccion-"+icI.ToString();
          seccionNameAdiI="seccionadiI-"+icI.ToString();
          try{
            
                <div id="@seccionName" class="paCargarDinamico">
                      <a href="content.Parts.controlador" class="paCargarDinamicoURL" style="display:none;"></a>
                      <div class="block_cab block_cab_active">
                          <h2>
                              <span>@Html.Raw(content.Parts.Nombre)</span>
            				  <span id="@seccionNameAdiI" style="font-style: oblique;"></span>
            
            </h2>
                          <h3><span></span></h3>
                          <div class="acordeon">
                          </div>
                      </div>
                      <div id="ContentListado" class="block_content">
                          <div class="form_section">
                              <div class="forms2">
                                  <!--inicio html frorm-->
                                  @foreach(var control in content.Parts.Controls)
                                  {
                                       @Html.Template((Viatecla.Factory.Scriptor.ScriptorContent)(control))
                                  }
                                  <!--fin html form-->
                              </div>
                          </div>
                      </div>
                  </div>
       
        
              }
          catch(Exception ex){
              Html.Raw(ex.StackTrace+"<br/><br/>");
          }
      }
 
 	</div>	
 }


	<div class="celdabootstrap col-md-@(mimodel.Parts.ContenedorIzquierda.Count>0?"9":"12") block">
        @if (!string.IsNullOrEmpty(Request.QueryString["MostCabe"])&& mimodel.Parts.BotonesSuperiores.Count == 0)
            {                              
          <div class="block_menu">
                <div style="min-width: 960px; max-width: 100%; height: 100%">
                    
                      <div class="boton">
                        <button class="SeparatorLeft boton1Style boton1" onclick="Salir();;return false;" style="">
                            <span class="boton1Span">
                                <img class="boton1Img csBtnSalir" alt="Salir" src="/bundles/d41d8cd98f00b204e9800998ecf8427e/faffabed-c58a-4d3d-94e3-5237ee4668c4/Images/formatmap32x32.png">
                            </span>
                            <span class="boton1txt">Salir</span>
                        </button>
                    </div>

                </div>
            </div>
            <script>
             function Salir(){
                  window.location.href = "/es-PE/sistema/consultas/busqueda_avanzada/"
             }
            </script>
          
          }
          
          @if (mimodel.Parts.BotonesSuperiores.Count > 0)
        {                              
          	<div class="block_menu">
                <div style="min-width: 960px; max-width: 100%; height: 100%">
                    
                    
              	   @helper CargarBotonesSuperiores(ScriptorContent content)
                    {
                       var target = "_blank";
                       string url = (String.IsNullOrEmpty(content.Parts.PaginaExterna) ?
                           (content.Parts.PaginaInterna.Count > 0 ?
                               Url.ScriptorChannel(content.Parts.PaginaInterna[0] as ScriptorChannel).ToString()
                               : String.Empty
                           ) : content.Parts.PaginaExterna);

                       if (content.Parts.PaginaInterna.Count > 0)
                       {
                           target = "";
                       }
                                 <button class="SeparatorLeft boton1Style boton1" onclick="RedirigirPagina('@content.Parts.NombreEvento','@(url)','@(target)');return false;" style="">
                                    <span class="boton1Span">
                                        <img class="boton1Img csBtn@(content.Parts.IconoPersonalizado.Value)" alt="@(content.Parts.NombreEvento)" src="/bundles/d41d8cd98f00b204e9800998ecf8427e/faffabed-c58a-4d3d-94e3-5237ee4668c4/Images/formatmap32x32.png">
                                    </span>
                                    <span class="boton1txt">@(content.Parts.NombreEvento)</span>
                                </button>
                        
                    }
					
             		 @Html.ScriptorContentInsert(
                        mimodel.Parts.BotonesSuperiores as ScriptorContentInsert,
                         CargarBotonesSuperiores, null, "div", null, "div"
                        )
             

                </div>
            </div>
            
            <script>
                function RedirigirPagina(tipo, url,target)
		    {                 
                    if(tipo=="Regresar")
                    {
                    	window.history.back();
                    }
                    else
                    {
                          if(target!=="")
                          {
                          	window.open(url, target)
                          }
                          else
                          {
                          	window.location.href=url;
                          }
					}
            }
            </script>
          
        }
                         
                         
          
             
          
          
                                
@foreach (ScriptorContent content in mimodel.Parts.ContenedorDerecha)
{
    icD=icD+1;
    seccionName="seccionD-"+icD.ToString();
  	seccionNameAdiD="seccionadiD-"+icD.ToString();
    try{
      
          <div id="@seccionName" class="paCargarDinamico">
                <a href="@content.Parts.controlador" class="paCargarDinamicoURL" style="display:none;"></a>
                <div class="block_cab block_cab_active">
                    <h2>
                        <span>@Html.Raw(@content.Parts.Nombre)</span>
                   		<span id="@seccionNameAdiD" style="font-style: oblique;"></span>
                  </h2>
                    <h3><span></span></h3>
                    <div class="acordeon">
                    </div>
                </div>
                <div id="ContentListado" class="block_content">
                    <div class="form_section">
                        <div class="forms2">
                            <!--inicio html frorm-->
                            @foreach(var control in content.Parts.Controls)
                            {
                                @Html.Template((Viatecla.Factory.Scriptor.ScriptorContent)(control))
                            }
                            <!--fin html form-->
                        </div>
                    </div>
                </div>
            </div>
 
  
        }
    catch(Exception ex){
        @Html.Raw(ex.StackTrace+"<br/><br/>");
    }
}
                              
      @if(!String.IsNullOrEmpty(mimodel.Parts.Nota.ToString()))
      {
        @:<div id="nota" class="block_content block_listado">
        @:        @Html.Raw(@mimodel.Parts.Nota)
        @:</div>
      }
	</div>
    
    
    
                             
</div>                              
                      

 <script> 
              
              @{
              	  string cadena="";
                  List<string> primeraGrilla=new List<string>();
                  foreach (ScriptorContent content1 in mimodel.Parts.ContenedorIzquierda)
                  {
                   foreach(ScriptorContent mcontent in content1.Parts.Controls)
                  {
                      if (((Viatecla.Factory.Scriptor.ScriptorContentParts)mcontent.Parts).Keys.ToList().Exists(x => x == "objgrilla") == true)
                        {
                                string nombreGrilla1 = HttpUtility.HtmlEncode(mcontent.Parts.objgrilla);
 						        cadena=cadena+ "function CargarGrilla"+nombreGrilla1+"(){\n";
                                cadena = cadena + "$('#grid" + (nombreGrilla1) + "').setFilter({IdGrilla:'" + mcontent.Id + "', " + Html.Raw(mcontent.Parts.JSFilter) + "});\n";
                                cadena=cadena+ "}\n";
                              
                              	if(mcontent.Parts.FlgCargarGrilla.ToString()=="1")
                            	{
                                  primeraGrilla.Add(nombreGrilla1);
                  				}
                        }
                    }
                  }
                  foreach (ScriptorContent content1 in mimodel.Parts.ContenedorDerecha)
                  {
                   foreach(ScriptorContent mcontent in content1.Parts.Controls)
                  {
                      if (((Viatecla.Factory.Scriptor.ScriptorContentParts)mcontent.Parts).Keys.ToList().Exists(x => x == "objgrilla") == true)
                        {
                                string nombreGrilla1 = HttpUtility.HtmlEncode(mcontent.Parts.objgrilla);
                                cadena=cadena+ "function CargarGrilla"+nombreGrilla1+"(){\n";
                                cadena = cadena + "$('#grid" + (nombreGrilla1) + "').setFilter({IdGrilla:'" + mcontent.Id + "', " + Html.Raw(mcontent.Parts.JSFilter) + "});\n";
                                cadena=cadena+ "}\n";
                                
                              	if(mcontent.Parts.FlgCargarGrilla.ToString()=="1")
                            	{
                                  primeraGrilla.Add(nombreGrilla1);
                  				}
                        }
                    }
                    
                  }

                  }
      
              		  @Html.Raw(cadena)  
                                  
         
                      $(function(){
            		  
                      @foreach(var reg in primeraGrilla)
                      {
                     	@:CargarGrilla@(reg)();
            		  }
            		  	CargarRecursosVM();
                      });
                        
                          function getUrlVars() {
                        var vars = {};
                        var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
                            vars[key] = value;
                        });
                        return vars;
						}
                        if(getUrlVars()["MostCabe"]){
                        	if(getUrlVars()["MostCabe"] == 0){
                                  $("#seccionD-1").hide();
                           }
                        }
                        setTimeout("ponerFechas()",1000);
   </script>
                        <style>
  .ui-widget-content {
    border: 0px solid transparent !important;
  }
  </style>

